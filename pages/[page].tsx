import React from 'react';
import Top from "../components/top/Top";
import Header from "../components/header/Header";
import {GetServerSideProps} from "next";
import categoryController from "../controllers/categoryController";
import cityController from "../controllers/cityController";
import {AddressType, BaseCityType, CategoryType, CompanyType} from "../consts/types";
import constController from "../controllers/constController";
import Footer from "../components/footer/Footer";
import Terms from "../components/terms/Terms";
import Addresses from "../components/addresses/Addresses";
import addresses from "../components/addresses/Addresses";
import Offer from "../components/offer/Offer";
import Law from "../components/law/Law";
import Head from "next/head";
import addressController from "../controllers/addressController";
import Message from "../components/common/message/Message";
import {withSessionSsr} from "../middlewares/withIronSession";
import {CONSTS} from "../consts/consts";

type PropsType = {
    categories: Array<CategoryType>
    cities: BaseCityType[]
    company: CompanyType
    page: string
    addresses: AddressType[] | undefined
}

export default function Page({cities, categories, company, page, addresses}: PropsType) {
    const getPageComponent = (page: string) => {
        switch (page) {
            case 'terms':
                return <Terms/>
            case 'offer':
                return <Offer company={company}/>
            case 'law':
                return <Law/>
            case 'thankyou':
                return <Message title={CONSTS.THANKYOU_TITLE} message={CONSTS.THANKYOU_MSG} />
            case 'addresses':
                return <Addresses addresses={addresses as AddressType[]}/>
            default:
                return <Message />
        }
    }

    return (
        <>
            <Top cities={cities} company={company}/>
            <div className="main-content-wrapper d-flex clearfix">
                <Header categories={categories} />
                    {
                        getPageComponent(page)
                    }
                <Footer categories={categories} company={company}/>
            </div>

            <Head>
                <title>Create Next App - Москва</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="initial-scale=1.0, user-scalable=no, maximum-scale=1" />
                <link rel="icon" href="/favicon.ico"/>

            </Head>
        </>

    )
}


export const getServerSideProps: GetServerSideProps = withSessionSsr(async ({query, req}) => {
    const page = query.page

    if(page === 'thankyou') {
        // @ts-ignore
        if (typeof req.session.orderSent === 'undefined') {
            return {
                redirect: {
                    permanent: false,
                    destination: "/cart"
                }
            }
        }
        else {
            // @ts-ignore
            delete req.session.orderSent
            await req.session.save()
        }
    }

    const categories = await categoryController.getCategories()
    const cities = await cityController.getCities()
    const company = constController.getCompany()

    const addresses = (page === 'addresses') ? await addressController.getAddresses() : []

    return {
        props: {
            categories,
            cities,
            company,
            page,
            addresses,
        },
    };
})
