import Top from "../../components/top/Top";
import Header from "../../components/header/Header";
import CartContainer from "../../components/cart/CartContainer";
import Footer from "../../components/footer/Footer";
import Head from "next/head";
import {GetServerSideProps} from "next";
import categoryController from "../../controllers/categoryController";
import cityController from "../../controllers/cityController";
import constController from "../../controllers/constController";
import productController from "../../controllers/productController";
import * as React from "react";
import {
    AddressType,
    BaseCityType,
    CategoryType,
    ProductType,
    StreetsignColorType,
    StreetsignType
} from "../../consts/types";
import addressController from "../../controllers/addressController";

type PropsType = {
    categories: Array<CategoryType>
    cities: BaseCityType[]
    company: any
    products: ProductType[]
    streetsignColors: StreetsignColorType[]
    addresses: AddressType[]
    step: number
}

export default function CartPage({categories, cities, company, products, streetsignColors, addresses, step}: PropsType) {
    // @ts-ignore
    return (
        <>
            <Top cities={cities} company={company}/>
            <div className="main-content-wrapper d-flex clearfix">
                <Header categories={categories} />
                {/*// @ts-ignore*/}
                <CartContainer cities={cities}
                               products={products}
                               streetsignColors={streetsignColors}
                               addresses={addresses}
                               step={step} />
                <Footer categories={categories} company={company}/>
            </div>

            <Head>
                <title>Create Next App - Москва</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
        </>
    )
}

export const getServerSideProps: GetServerSideProps = async (context) => {
    const step = Number(context.query.id)

    if(step > 3) {
        return {
            redirect: {
                permanent: false,
                destination: "/404"
            }
        }
    }

    const categories = await categoryController.getCategories()
    const cities = await cityController.getCities()
    const company = constController.getCompany()

    const products = await productController.getProducts()
        .then(data => data.filter(el => el.is_published))
    const streetsignColors = constController.getStreetsignColors()
    let addresses: AddressType[] = []
    if(step === 2)
        addresses = await addressController.getAddresses()

    return {
        props: {
            categories,
            cities,
            company,
            products,
            streetsignColors,
            addresses,
            step,
        },
    };
}